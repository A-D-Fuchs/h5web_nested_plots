.boundEditor {
  display: flex;
  align-items: center;
  margin-bottom: 0.75rem;
  font-weight: bold;
}

.label {
  width: 2.5em;
  margin: 0 1rem 0 0;
  text-transform: uppercase;
  font-size: inherit;
  color: var(--near-black);
}

.value {
  flex: 1 1 0%;
  width: 0; /* ensures input shrinks before filling the available space */
  margin-right: 0.375rem;
  padding: 0.25rem 0.375rem;
  background-color: rgba(255, 255, 255, 0.5);
  border: 1px solid transparent;
  border-radius: 0.125rem;
  box-shadow: 0 0 2px var(--dark-slate-gray);
  text-align: right;
  color: var(--near-black);
  font-weight: inherit;
  line-height: inherit;
  transition: background-color 0.05s ease-in-out, box-shadow 0.05s ease-in-out;
  cursor: text;
}

.value:hover {
  box-shadow: 1px 1px 2px 1px var(--dark-gray);
}

.value:focus {
  box-shadow: 1px 1px 2px 1px var(--secondary-dark);
  outline: none;
}

.boundEditor[data-error] .label,
.boundEditor[data-error] .value {
  color: var(--warn);
}

.boundEditor[data-editing='true'] .value {
  background-color: var(--white);
  border-color: var(--secondary-dark);
  outline: none;
}

.boundEditor[data-editing='true'] .value:hover {
  box-shadow: 1px 1px 2px 1px var(--secondary-dark);
}

.action {
  composes: btn-clean from global;
  display: flex;
  align-items: center;
  padding: 0.25rem;
  font-size: 1.125em;
  border-radius: 0.5rem;
  transition: background-color 0.05s ease-in-out, box-shadow 0.05s ease-in-out;
}

.action:hover {
  background-color: var(--secondary-light);
  box-shadow: var(--btn-shadow-idle) var(--btn-shadow-color);
}

.action:active {
  box-shadow: var(--btn-shadow-pressed) var(--btn-shadow-color);
}
