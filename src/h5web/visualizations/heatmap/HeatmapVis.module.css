.root {
  flex: 1 1 0%;
  display: flex;
  min-width: 0;
}

.mapArea {
  flex: 1 1 0%;
  min-width: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.heatmap {
  flex: none;
}

/* R3F's <Dom /> element*/
.heatmap > div > div {
  transform: none !important;
  pointer-events: none;
}

.axisGrid {
  display: grid;
  grid-template-areas:
    'left-axis .'
    'empty bottom-axis';
  grid-template-columns: 72px 1fr;
  grid-template-rows: 1fr 36px;
}

.axisGrid::before {
  grid-area: empty;
  background-color: #fff;
  content: '';
}

.leftAxisCell,
.bottomAxisCell {
  display: flex;
  background-color: #fff;
  pointer-events: all;
}

.leftAxisCell {
  grid-area: left-axis;
}

.bottomAxisCell {
  grid-area: bottom-axis;
}

.colorBarArea {
  display: flex;
  flex-direction: column;
  width: 6em;
  min-height: 0;
}

.colorBar {
  display: flex;
  padding: 1em;
  flex: 1 1 auto;
  min-height: 0;
}

.colorBarAxis {
  display: block;
  overflow: visible;
  align-self: center;
}

.gradient {
  flex: 1 0 auto;
  border: 1px solid black;
}

.axis {
  display: block;
  overflow: visible;
  flex: 1 1 0%;
}

.axis[data-orientation='left'] {
  text-anchor: end;
  min-height: 0;
}

.axis[data-orientation='bottom'] {
  min-width: 0;
  text-anchor: middle;
}

.tick > text {
  fill: currentColor;
  font-family: inherit;
  font-size: inherit;
  text-anchor: inherit;
  dominant-baseline: inherit;
}

.scaleTypeSelector {
  composes: btn-clean from global;
  font-size: small;
  height: 2em;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  background-color: var(--primary-light-bg);
}

.scaleTypeSelector:hover,
.scaleTypeSelector[aria-checked='true'] {
  background-color: var(--primary-dark-bg);
}
