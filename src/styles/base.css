*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: var(--sans-serif);
  line-height: 1.2;
  color: var(--black);
}

@media (min-width: 50em) {
  body {
    font-size: 1.125rem;
  }
}

#root {
  height: 100vh;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

p,
ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

code,
pre {
  font-family: var(--monospace);
}

abbr[title] {
  cursor: help;
  border-bottom: 1px dotted;
  text-decoration: none;
}

[hidden] {
  display: none !important;
}

[tabindex='-1']:focus:not(:focus-visible) {
  outline: 0 !important;
}
.btn-clean {
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  font: inherit;
  color: inherit;
  line-height: inherit;
  text-align: left;
  white-space: normal;
  cursor: pointer;
}

.btn-clean:disabled,
.btn-clean[aria-disabled='true'] {
  opacity: 0.5;
  pointer-events: none;
}

.btn-link {
  composes: btn-clean from global;
  padding: 0.25rem 0.5rem;
  font-weight: 600;
}

.btn-link:hover {
  text-decoration: underline;
}

.reflex-splitter {
  width: 5px !important;
  border-color: var(--light-gray) !important;
  transition: background-color 0.2s ease-in-out !important;
}

.reflex-splitter:hover {
  background-color: var(--light-gray) !important;
}

@media (prefers-reduced-motion) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

@media (prefers-color-scheme: dark) {
  body {
    filter: invert();

    /* Set shadows to lighter colors so they remain dark once inverted */
    --btn-shadow-color: #f5f5f5;
    --btn-shadow-dark-color: #fafafa;
    --btn-shadow-darker-color: #fff;
  }

  .no-invert {
    filter: invert(); /* invert back to normal colors */
  }

  .no-invert-canvas > canvas {
    filter: invert(); /* invert back to normal colors */
  }
}
